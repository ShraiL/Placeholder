// IMPORTANT: Replace YourProjectName with your actual project's root namespace
using YourProjectName.Final.Models;
using System;
using System.Windows.Forms;

// IMPORTANT: Replace {EntityName} with the singular name of your entity
namespace YourProjectName.Final
{
    public partial class {EntityName}Dialog : Form
    {
        // IMPORTANT: Update public properties to match your new entity's properties and types
        public {Property1Type} {Property1Name} { get; private set; }
        public {Property2Type} {Property2Name} { get; private set; }
        public {Property3Type} {Property3Name} { get; private set; }
        public int EntityId { get; private set; } // Renamed from LaptopId for generic use

        // Constructor for adding a new entity
        public {EntityName}Dialog()
        {
            InitializeComponent();
            EntityId = 0; // Indicate a new entity (ID will be generated by DB)
        }

        // New constructor for editing an existing entity
        // IMPORTANT: Change parameter type and name
        public {EntityName}Dialog({EntityName} {EntityName.ToLower()}ToEdit) : this() // Call default constructor first
        {
            EntityId = {EntityName.ToLower()}ToEdit.Id;
            // IMPORTANT: Assign existing data to the text boxes
            {Property1Name}TxtBox.Text = {EntityName.ToLower()}ToEdit.{Property1Name}.ToString();
            {Property2Name}TxtBox.Text = {EntityName.ToLower()}ToEdit.{Property2Name}.ToString();
            {Property3Name}TxtBox.Text = {EntityName.ToLower()}ToEdit.{Property3Name}.ToString();
        }

        private void DoneButton_Click(object sender, EventArgs e)
        {
            // IMPORTANT: Get value from the correct TextBox and trim whitespace
            {Property1Name} = {Property1Name}TxtBox.Text.Trim();

            // IMPORTANT: Update validation logic for each of your new properties
            if (string.IsNullOrWhiteSpace({Property1Name}))
            {
                MessageBox.Show("Please enter a {Property1Name}.", "Input Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }

            // Example for int/float parsing. Adjust for string properties if needed.
            if (!{Property2Type}.TryParse({Property2Name}TxtBox.Text, out {Property2Type} {Property2Name.ToLower()}))
            {
                MessageBox.Show("Please enter a valid {Property2Name}.", "Input Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }
            {Property2Name} = {Property2Name.ToLower()};

            if (!{Property3Type}.TryParse({Property3Name}TxtBox.Text, out {Property3Type} {Property3Name.ToLower()}))
            {
                MessageBox.Show("Please enter a valid {Property3Name}.", "Input Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }
            {Property3Name} = {Property3Name.ToLower()};

            DialogResult = DialogResult.OK;
            Close();
        }
    }
}
